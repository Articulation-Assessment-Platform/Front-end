name: articulation-app CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd articulation-assessment-app
          npm install

      - name: Build
        run: |
          cd articulation-assessment-app
          npm run build

  sonarqube:
    needs: build
    name: Build and Analyze
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          npm install sonarqube-scanner --prefix ./.sonar/scanner

      - name: Install dependencies
        run: |
          cd articulation-assessment-app
          npm install

      - name: Build
        run: |
          cd articulation-assessment-app
          npm run build

      - name: Run SonarQube analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -D sonarqube-scanner
          npm install -g sonarqube-scanner
          npx sonarqube-scanner -Dsonar.projectKey="Articulation-Assessment-Platform_User-Service" -Dsonar.organization="articulation-assessment-platform" -Dsonar.sources=./articulation-assessment-app/src -Dsonar.host.url="https://sonarcloud.io" -Dsonar.login="${{ secrets.SONAR_TOKEN }}"
  docker:
    needs: sonarqube
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Create Docker network
        run: docker network create backend

      - name: Build Docker Compose services
        run: docker-compose -f "articulation-assessment-app/docker-compose.yml" build

      - name: Publish Docker images
        run: |
          docker tag frontend:latest 11112002/frontend:latest
          docker push 11112002/frontend:latest

      - name: Clean up Docker containers
        run: docker-compose -f "articulation-assessment-app/docker-compose.yml" down

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Azure Login
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Set Kubeconfig
        run: az aks get-credentials --resource-group 'Articulation-Assessment-Platform' --name 'aks-articu'

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f articulation-assessment-app/aks-manifest.yml
